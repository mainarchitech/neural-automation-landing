'use client';

import { motion } from 'framer-motion';
import Link from 'next/link';
import React from 'react';

type ServiceLink = { name: string; href: string; description?: string };
type ResourceLink = { name: string; href: string };
type SocialLink = { name: string; icon: string; href: string; aria: string };

const services: ServiceLink[] = [
  { name: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤', href: '/automation/processes' },
  { name: 'AI –ê–Ω–∞–ª–∏—Ç–∏–∫–∞', href: '/automation/analytics' },
  { name: '–ß–∞—Ç-–±–æ—Ç—ã', href: '/automation/chatbots' },
  { name: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è AI', href: '/automation/integration' },
  { name: '–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥', href: '/automation/consulting' },
];

const resources: ResourceLink[] = [
  { name: '–ë–ª–æ–≥', href: '/resources/blog' },
  { name: '–ö–µ–π—Å—ã', href: '/resources/cases' },
  { name: '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è', href: '/resources/docs' },
  { name: '–í–µ–±–∏–Ω–∞—Ä—ã', href: '/resources/webinars' },
  { name: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞', href: '/resources/support' }
];

const socials: SocialLink[] = [
  { name: 'Telegram', icon: 'üì¢', href: '#', aria: '–û—Ç–∫—Ä—ã—Ç—å Telegram' },
  { name: 'LinkedIn', icon: 'üíº', href: '#', aria: '–û—Ç–∫—Ä—ã—Ç—å LinkedIn' },
  { name: 'X (Twitter)', icon: 'üê¶', href: '#', aria: '–û—Ç–∫—Ä—ã—Ç—å X (Twitter)' },
  { name: 'YouTube', icon: 'üì∫', href: '#', aria: '–û—Ç–∫—Ä—ã—Ç—å YouTube' },
];

export default function Footer() {
  const year = new Date().getFullYear();

  return (
    <footer className="bg-gray-900 text-white py-12">
      <div className="container mx-auto px-4">
        {/* Top grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          {/* Company */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
          >
            <div className="text-2xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent mb-4">
              Neural Automation
            </div>
            <p className="text-gray-400 mb-6">
              –ü–µ—Ä–µ–¥–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π.
            </p>
            <div className="flex space-x-4">
              {socials.map((s) => (
                <motion.a
                  key={s.name}
                  href={s.href}
                  aria-label={s.aria}
                  whileHover={{ scale: 1.1, y: -2 }}
                  className="w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-gray-700 transition-colors"
                >
                  <span className="text-lg" aria-hidden>
                    {s.icon}
                  </span>
                </motion.a>
              ))}
            </div>
          </motion.div>

          {/* Services */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6, delay: 0.1 }}
          >
            <h3 className="text-lg font-semibold mb-4">–£—Å–ª—É–≥–∏</h3>
            <ul className="space-y-2">
              {services.map((service) => (
                <li key={service.name}>
                  {service.href.startsWith('/') ? (
                    <Link
                      href={service.href}
                      className="text-gray-400 hover:text-white transition-colors group"
                    >
                      <div className="font-medium group-hover:text-blue-400">
                        {service.name}
                      </div>
                      {service.description && (
                        <div className="text-sm text-gray-500 group-hover:text-gray-300">
                          {service.description}
                        </div>
                      )}
                    </Link>
                  ) : (
                    <a
                      href={service.href}
                      className="text-gray-400 hover:text-white transition-colors group"
                    >
                      <div className="font-medium group-hover:text-blue-400">
                        {service.name}
                      </div>
                      {service.description && (
                        <div className="text-sm text-gray-500 group-hover:text-gray-300">
                          {service.description}
                        </div>
                      )}
                    </a>
                  )}
                </li>
              ))}
            </ul>
          </motion.div>

          {/* Resources */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6, delay: 0.2 }}
          >
            <h3 className="text-lg font-semibold mb-4">–†–µ—Å—É—Ä—Å—ã</h3>
            <ul className="space-y-2">
              {resources.map((r) => (
                <li key={r.name}>
                  {r.href.startsWith('/') ? (
                    <Link
                      href={r.href}
                      className="text-gray-400 hover:text-white transition-colors"
                    >
                      {r.name}
                    </Link>
                  ) : (
                    <a
                      href={r.href}
                      className="text-gray-400 hover:text-white transition-colors"
                    >
                      {r.name}
                    </a>
                  )}
                </li>
              ))}
            </ul>
          </motion.div>

          {/* Contact */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6, delay: 0.3 }}
          >
            <h3 className="text-lg font-semibold mb-4">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
            <div className="space-y-2 text-gray-400">
              <a
                href="mailto:contacts@neural-automation.tech"
                className="hover:text-white transition-colors block"
              >
                üìß contacts@neural-automation.tech
              </a>
              <a
                href="tel:+79991254054"
                className="hover:text-white transition-colors block"
              >
                üìû +7 (999) 125-40-54
              </a>
              <a href="/#contacts" className="hover:text-white transition-colors block">
                üìç –ú–æ—Å–∫–≤–∞, –ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∞—è –Ω–∞–±., 12
              </a>
            </div>

            {/* Newsletter */}
            <div className="mt-6">
              <h4 className="text-sm font-semibold mb-2">–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏</h4>
              <form
                className="flex"
                onSubmit={(e) => {
                  e.preventDefault();
                  // TODO: –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
                }}
              >
                <input
                  type="email"
                  placeholder="–í–∞—à email"
                  className="px-3 py-2 bg-gray-800 border border-gray-700 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
                <motion.button
                  type="submit"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="bg-blue-600 px-4 py-2 rounded-r-lg hover:bg-blue-700 transition-colors"
                  aria-label="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è"
                >
                  ‚Üí
                </motion.button>
              </form>
            </div>
          </motion.div>
        </div>

        {/* Bottom Bar */}
        <motion.div
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          viewport={{ once: true }}
          transition={{ duration: 0.6, delay: 0.4 }}
          className="border-t border-gray-800 mt-8 pt-8 flex flex-col md:flex-row justify-between items-center"
        >
          <p className="text-gray-400 text-sm">
            ¬© {year} Neural Automation. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
          </p>
          <div className="flex space-x-6 mt-4 md:mt-0">
            {['–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', '–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', 'Cookies'].map(
              (item) => (
                <a key={item} href="#" className="text-gray-400 hover:text-white text-sm transition-colors">
                  {item}
                </a>
              )
            )}
          </div>
        </motion.div>
      </div>
    </footer>
  );
}